# ==============================================================================
# Axiom-Phoenix v4.0 - All Screens (Load After Components)
# Application screens that extend Screen base class
# ==============================================================================
#
# TABLE OF CONTENTS DIRECTIVE:
# When modifying this file, ensure page markers remain accurate and update
# TableOfContents.md to reflect any structural changes.
#
# Search for "PAGE: ASC.###" to find specific sections.
# Each section ends with "END_PAGE: ASC.###"
# ==============================================================================

using namespace System.Collections.Generic

#region Screen Classes

# ==============================================================================
# CLASS: DashboardScreen (Data-Driven Dashboard with DataGridComponent)
#
# INHERITS:
#   - Screen (ABC.006)
#
# DEPENDENCIES:
#   Services:
#     - NavigationService (ASE.004)
#     - FocusManager (ASE.009)
#     - DataManager (ASE.003)
#     - ViewDefinitionService (ASE.011)
#   Components:
#     - Panel (ACO.011)
#     - DataGridComponent (ACO.022)
#     - LabelComponent (ACO.001)
#
# PURPOSE:
#   Data-driven dashboard showing task statistics, recent tasks, and quick actions
#   using the ViewDefinitionService pattern for consistent formatting.
# ==============================================================================
class DashboardScreen : Screen {
    DashboardScreen([object]$serviceContainer) : base("DashboardScreen", $serviceContainer) {}

    [void] Initialize() {
        if (-not $this.ServiceContainer) { return }

        # Create sidebar menu
        $menu = [SidebarMenu]::new("MainMenu")
        $menu.X = 0
        $menu.Y = 0
        $menu.Height = $this.Height
        $menu.Width = 22
        $menu.Title = "Navigation"
        
        $menu.AddMenuItem("1", "Dashboard", "navigation.dashboard")
        $menu.AddMenuItem("2", "Task List", "navigation.taskList")
        $menu.AddMenuItem("T", "Task List", "navigation.taskList")
        $menu.AddMenuItem("N", "New Task", "navigation.newTask")
        $menu.AddMenuItem("-", "", "")
        $menu.AddMenuItem("Q", "Quit", "app.exit")
        
        $this.AddChild($menu)

        # Simple welcome panel
        $welcomePanel = [Panel]::new("WelcomePanel")
        $welcomePanel.X = 23
        $welcomePanel.Y = 0
        $welcomePanel.Width = $this.Width - 24
        $welcomePanel.Height = $this.Height
        $welcomePanel.Title = " Axiom-Phoenix v4.0 "
        $this.AddChild($welcomePanel)

        # Simple welcome message
        $welcome = [LabelComponent]::new("WelcomeMsg")
        $welcome.Text = "Welcome! Use the menu on the left to navigate."
        $welcome.X = 2
        $welcome.Y = 2
        $welcome.ForegroundColor = Get-ThemeColor -ColorName "Primary"
        $welcomePanel.AddChild($welcome)

        $instruction = [LabelComponent]::new("Instruction")
        $instruction.Text = "Press the number/letter key to select an option."
        $instruction.X = 2
        $instruction.Y = 4
        $welcomePanel.AddChild($instruction)
    }

    [void] OnEnter() {
        # Nothing needed for simple menu
    }

    [bool] HandleInput([System.ConsoleKeyInfo]$keyInfo) {
        # Let menu handle its keys
        $menu = $this.Children | Where-Object { $_ -is [SidebarMenu] } | Select-Object -First 1
        if ($menu -and $menu.HandleKey($keyInfo)) {
            return $true
        }
        
        # Pass to base
        return ([Screen]$this).HandleInput($keyInfo)
    }
}

#endregion
#<!-- END_PAGE: ASC.001 -->
