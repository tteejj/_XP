# mega.ps1 - The Reconstructor
# Synthesized by micro.ps1 to enable a perfect round-trip build.

[CmdletBinding()]
param(
    [string]$InputDirectory = ".",
    [string]$OutputMonolithPath = "monolith.txt",
    [string]$RunnerScriptName = "run.ps1"
)

Set-StrictMode -Version Latest
$ErrorActionPreference = "Stop"

Write-Host "MEGA: Reconstructing monolith from '$InputDirectory'..."

$runnerContent = Get-Content -Path (Join-Path $InputDirectory $RunnerScriptName) -Raw
$paramBlock = if ($runnerContent -match '(?msi)^param\s*\((.*?)\)') { $matches[0] } else { '' }
$mainLogic = if ($runnerContent -match '(?msi)# --- MAIN EXECUTION LOGIC ---\r?\n(.*?)\s*$') { $matches[1].Trim() } else { throw "Main logic not found in $RunnerScriptName" }

$FileLoadOrder = @(
    'modules\logger\logger.psm1',
    'modules\exceptions\exceptions.psm1',
    'modules\models\models.psm1',
    'components\tui-primitives\tui-primitives.psm1',
    'modules\event-system\event-system.psm1',
    'modules\theme-manager\theme-manager.psm1',
    'components\navigation-class\navigation-class.psm1',
    'components\tui-components\tui-components.psm1',
    'components\advanced-data-components\advanced-data-components.psm1',
    'components\advanced-input-components\advanced-input-components.psm1',
    'modules\data-manager-class\data-manager-class.psm1',
    'services\keybinding-service-class\keybinding-service-class.psm1',
    'services\navigation-service-class\navigation-service-class.psm1',
    'services\keybinding-service\keybinding-service.psm1',
    'services\navigation-service\navigation-service.psm1',
    'modules\tui-engine\tui-engine.psm1'
)

$sb = [System.Text.StringBuilder]::new()
[void]$sb.AppendLine("# MONOLITHIC SCRIPT (Generated by mega.ps1)")
[void]$sb.AppendLine("$paramBlock")
[void]$sb.AppendLine('Set-StrictMode -Version Latest')
[void]$sb.AppendLine('$ErrorActionPreference = "Stop"')

foreach ($path in $FileLoadOrder) {
    $fullPath = Join-Path $InputDirectory $path
    $content = Get-Content -Path $fullPath -Raw
    [void]$sb.AppendLine("
# --- START OF ORIGINAL FILE: $path ---")
    [void]$sb.AppendLine($content.Trim())
    [void]$sb.AppendLine("# --- END OF ORIGINAL FILE: $path ---")
}

[void]$sb.AppendLine("
# --- START OF MAIN EXECUTION LOGIC (from run.ps1) ---")
[void]$sb.AppendLine($mainLogic)
[void]$sb.AppendLine("# --- END OF MAIN EXECUTION LOGIC ---")

Set-Content -Path $OutputMonolithPath -Value $sb.ToString() -Encoding UTF8
Write-Host "New monolith created at: $OutputMonolithPath" -ForegroundColor Green
